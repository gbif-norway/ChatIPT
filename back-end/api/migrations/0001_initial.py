# Generated by Django 4.2.2 on 2023-07-11 09:10

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated_df_sample', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('skipped', 'Skipped'), ('not_started', 'Not Started'), ('in_progress', 'In Progress')], default='not_started', max_length=20)),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'created',
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('title', models.CharField(blank=True, max_length=500)),
                ('description', models.CharField(blank=True, max_length=9000)),
                ('orcid', models.CharField(blank=True, max_length=50)),
                ('df_sample', models.JSONField(blank=True, null=True)),
                ('shape', models.JSONField()),
                ('file', models.FileField(upload_to='user_files')),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'created',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.CharField(max_length=500)),
                ('initial_user_message', models.CharField(max_length=1500)),
                ('initial_assistant_message', models.CharField(max_length=1500)),
                ('initial_function', models.CharField(max_length=200)),
                ('functions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), size=None)),
                ('gpt_model', models.CharField(choices=[('gpt-3.5-turbo', 'Gpt 35'), ('gpt-3.5-turbo-16k', 'Gpt 35 16K'), ('gpt-4', 'Gpt 4')], default='gpt-3.5-turbo-16k', max_length=30)),
            ],
            options={
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('content', models.CharField(blank=True, max_length=3000)),
                ('role', models.CharField(choices=[('user', 'User'), ('system', 'System'), ('assistant', 'Assistant')], max_length=10)),
                ('gpt_response', models.JSONField(blank=True, null=True)),
                ('gpt_output_function', models.JSONField(blank=True, null=True)),
                ('df_sample', models.JSONField(blank=True, null=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.conversation')),
            ],
            options={
                'ordering': ['created'],
                'get_latest_by': 'created',
            },
        ),
        migrations.AddField(
            model_name='conversation',
            name='dataset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.dataset'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.task'),
        ),
    ]
